{"version":3,"sources":["firebase.js","components/Forms/colors.js","components/Forms/FormErrorMessage.js","components/Forms/FormTextInput.js","components/Forms/FormButton.js","components/Forms/FormSwitch.js","components/Form.js","components/Forms/Form.js","components/Forms/FormField.js","components/RequestScreen.js","components/HomeScreen.js","components/VolunteerScreen.js","components/DetailedRequestScreen.js","App.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","primary","secondary","black","white","ghostWhite","lightGrey","mediumGrey","red","FormErrorMessage","error","visible","Text","style","styles","errorText","StyleSheet","create","marginLeft","color","Colors","fontSize","marginBottom","fontWeight","FormTextInput","leftIcon","width","rightIcon","handlePasswordVisibility","otherProps","View","container","MaterialCommunityIcons","name","size","icon","TextInput","input","placeholderTextColor","TouchableOpacity","onPress","rightIconStyles","backgroundColor","borderRadius","flexDirection","padding","marginVertical","marginRight","flex","alignSelf","button","justifyContent","alignItems","buttonText","textTransform","title","Form","props","children","initialValues","onSubmit","validationSchema","Fragment","Base","Field","useFormikContext","setFieldTouched","setFieldValue","values","errors","touched","value","onChangeText","text","onBlur","Button","handleSubmit","ErrorMessage","Switch","onChange","x","onValueChange","RequestHelpBtn","paddingTop","navigation","useState","submitError","setSubmitError","SafeAreaView","ScrollView","user","addr","time","longitude","latitude","fetch","method","then","res","json","resJson","accepted","request","database","ref","child","set","catch","message","console","navigate","placeholder","autoCapitalize","autoFocus","HomeScreen","VolunteerScreen","requestList","setRequestList","useEffect","on","snap","val","requests","Object","log","initialRegion","latitudeDelta","longitudeDelta","map","marker","index","key","coordinate","description","DetailedRequestScreen","Stack","createStackNavigator","App","NavigationContainer","Navigator","Screen","component"],"mappings":"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","file":"static/js/app.0aaef207.chunk.js","sourcesContent":["import * as firebase from 'firebase';\r\nimport \"firebase/database\";\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCbKHJxhz53HWo0wyjJVd4yxTb6NZDjSWU\",\r\n  authDomain: \"shovelsnow-316ad.firebaseapp.com\",\r\n  databaseURL: \"https://shovelsnow-316ad-default-rtdb.firebaseio.com\",\r\n  projectId: \"shovelsnow-316ad\",\r\n  storageBucket: \"shovelsnow-316ad.appspot.com\",\r\n  messagingSenderId: \"663821110835\",\r\n  appId: \"1:663821110835:web:b5281ea103c517cea8dd46\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport {firebase} ;\r\n","export default {\r\n  primary: '#f57c00',\r\n  secondary: '#039be5',\r\n  black: '#222222',\r\n  white: '#ffffff',\r\n  ghostWhite: '#f8f8ff',\r\n  lightGrey: '#f9f9f9',\r\n  mediumGrey: '#6e6869',\r\n  red: '#fc5c65'\r\n};\r\n","import React from 'react';\r\nimport { StyleSheet, Text } from 'react-native';\r\n\r\nimport Colors from './colors';\r\n\r\nexport default function FormErrorMessage({ error, visible }) {\r\n  if (!error || !visible) {\r\n    return null;\r\n  }\r\n\r\n  return <Text style={styles.errorText}>{error}</Text>;\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  errorText: {\r\n    marginLeft: 15,\r\n    color: Colors.red,\r\n    fontSize: 16,\r\n    marginBottom: 5,\r\n    fontWeight: '600'\r\n  }\r\n});\r\n","import React from 'react';\r\nimport { View, StyleSheet, TextInput, TouchableOpacity } from 'react-native';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\n\r\nimport Colors from './colors';\r\n\r\nexport default function FormTextInput({\r\n  leftIcon,\r\n  width = '100%',\r\n  rightIcon,\r\n  handlePasswordVisibility,\r\n  ...otherProps\r\n}) {\r\n  return (\r\n    <View style={[styles.container, { width }]}>\r\n      {leftIcon && (\r\n        <MaterialCommunityIcons\r\n          name={leftIcon}\r\n          size={20}\r\n          color={Colors.mediumGrey}\r\n          style={styles.icon}\r\n        />\r\n      )}\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholderTextColor={Colors.mediumGrey}\r\n        {...otherProps}\r\n      />\r\n      {rightIcon && (\r\n        <TouchableOpacity onPress={handlePasswordVisibility}>\r\n          <MaterialCommunityIcons\r\n            name={rightIcon}\r\n            size={20}\r\n            color={Colors.mediumGrey}\r\n            style={styles.rightIconStyles}\r\n          />\r\n        </TouchableOpacity>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: Colors.lightGrey,\r\n    borderRadius: 25,\r\n    flexDirection: 'row',\r\n    padding: 15,\r\n    marginVertical: 10\r\n  },\r\n  icon: {\r\n    marginRight: 10\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    width: '100%',\r\n    fontSize: 18,\r\n    color: Colors.black\r\n  },\r\n  rightIconStyles: {\r\n    alignSelf: 'center',\r\n    marginLeft: 10\r\n  }\r\n});\r\n","import React from 'react';\r\nimport { Text, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport { useFormikContext } from 'formik';\r\n\r\nimport Colors from './colors';\r\n\r\nexport default function FormButton({ title, color = 'primary' }) {\r\n  const { handleSubmit, values } = useFormikContext();\r\n  const text = typeof title === 'function' ? title(values) : title;\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={[styles.button, { backgroundColor: Colors[color] }]}\r\n      onPress={handleSubmit}\r\n    >\r\n      <Text style={styles.buttonText}>{text}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    marginVertical: 10,\r\n    borderRadius: 25,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 15,\r\n    width: '100%'\r\n  },\r\n  buttonText: {\r\n    color: Colors.white,\r\n    fontSize: 18,\r\n    fontWeight: '600',\r\n    textTransform: 'uppercase'\r\n  }\r\n});\r\n","import React from 'react';\r\nimport { StyleSheet, Switch, Text, View } from 'react-native';\r\nimport { useFormikContext } from 'formik';\r\n\r\nimport Colors from './colors';\r\n\r\nexport default function FormSwitch({name, title, onChange = x => x, ...otherProps}) {\r\n  const { values, setFieldValue } = useFormikContext();\r\n  const value = values[name];\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>{title}</Text>\r\n      <Switch\r\n        value={value}\r\n        onValueChange={(value) => {\r\n          onChange(value);\r\n          setFieldValue(name, value);\r\n        }}\r\n        {...otherProps}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'row'\r\n  },\r\n  title: {\r\n    color: Colors.white,\r\n    fontSize: 18,\r\n    fontWeight: '600',\r\n    marginRight: 5,\r\n  },\r\n});","import Base from './Forms/Form';\r\nimport FormField from './Forms/FormField';\r\nimport FormButton from './Forms/FormButton';\r\nimport FormErrorMessage from './Forms/FormErrorMessage';\r\nimport FormSwitch from './Forms/FormSwitch';\r\n\r\nconst Form = props => Base(props);\r\n\r\nForm.Field = FormField;\r\nForm.Button = FormButton;\r\nForm.ErrorMessage = FormErrorMessage;\r\nForm.Switch = FormSwitch;\r\n\r\nexport default Form;","import React from 'react';\r\nimport { Formik } from 'formik';\r\n\r\nexport default function Form({\r\n  children,\r\n  initialValues,\r\n  onSubmit,\r\n  validationSchema\r\n}) {\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {() => <React.Fragment>{children}</React.Fragment>}\r\n    </Formik>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useFormikContext } from 'formik';\r\n\r\nimport FormErrorMessage from './FormErrorMessage';\r\nimport FormTextInput from './FormTextInput';\r\n\r\nexport default function FormField({ name, width, ...otherProps }) {\r\n  const {\r\n    setFieldTouched,\r\n    setFieldValue,\r\n    values,\r\n    errors,\r\n    touched\r\n  } = useFormikContext();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <FormTextInput\r\n        value={values[name]}\r\n        onChangeText={text => setFieldValue(name, text)}\r\n        onBlur={() => setFieldTouched(name)}\r\n        width={width}\r\n        {...otherProps}\r\n      />\r\n      <FormErrorMessage error={errors[name]} visible={touched[name]} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { setStatusBarNetworkActivityIndicatorVisible } from 'expo-status-bar';\r\nimport React, {useState} from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet, SafeAreaView, ScrollView, Alert } from 'react-native';\r\nimport {firebase} from '../firebase'\r\nimport Form from './Form'\r\nimport * as Yup from 'yup';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\n\r\n// const validationSchema = Yup.object().shape({\r\n//   user: Yup.string()\r\n//     .required()\r\n//     .label('User'),\r\n//   time: Yup.string()\r\n//     .required()\r\n//     .matches(/(M|Tu|W|Th|F)+ +\\d\\d?:\\d\\d-\\d\\d?:\\d\\d/, 'Must be weekdays followed by start and end time')\r\n//     .label('Meeting times'),\r\n//   title: Yup.string()\r\n//     .required()\r\n//     .label('Title'),\r\n// });\r\n\r\nconst RequestHelpBtn = ({navigation}) => {\r\n  const [requested, setRequested] = useState(0);\r\n  const textInside = ['SHOVEL!', 'CANCEL!'];\r\n  const [submitError, setSubmitError] = useState('');\r\n\r\n\r\n  function handleSubmit(values) {\r\n    const { user, time, addr } = values;\r\n    let longitude;\r\n    let latitude;\r\n    fetch(`http://api.positionstack.com/v1/forward?access_key=300bfd70ae97e0cdc39aa8c66e930ada&query=${addr}`, {\r\n      method: 'GET'\r\n    })\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .then((resJson) => {\r\n      longitude = resJson['data'][0]['longitude'];\r\n      latitude = resJson['data'][0]['latitude'];\r\n      accepted = 0;\r\n    })\r\n    .then(() => {\r\n        const request = { user, time, addr, longitude, latitude, accepted };\r\n        firebase.database().ref('requests').child(user).set(request).catch(error => {\r\n          setSubmitError(error.message);\r\n        });\r\n    })\r\n    .catch(error => {console.error(error)});\r\n  }\r\n\r\n  function handleOnPress() {\r\n    if (requested == 0) {\r\n      setRequested(1);\r\n    } else {\r\n      setRequested(0);\r\n    }\r\n  } \r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <ScrollView>\r\n        <Form\r\n          initialValues={{\r\n            user: 'Jack',\r\n            addr: '1630 Chicago Avenue, Evanston, Illinois, USA',\r\n            time: 'Thu 12:00-13:50',\r\n          }}\r\n          // validationSchema={validationSchema}\r\n          onSubmit={(values) => {\r\n            handleSubmit(values);\r\n            navigation.navigate('Home');\r\n          }}\r\n        >\r\n            <Form.Field\r\n                name=\"user\"\r\n                leftIcon=\"identifier\"\r\n                placeholder=\"Jack\"\r\n                autoCapitalize=\"none\"\r\n                autoFocus={true}\r\n            />\r\n            <Form.Field\r\n                name=\"time\"\r\n                leftIcon=\"calendar-range\"\r\n                placeholder=\"Thu 12:00-13:50\"\r\n                autoCapitalize=\"none\"\r\n            />\r\n            <Form.Field\r\n                name=\"addr\"\r\n                leftIcon=\"format-title\"\r\n                placeholder=\"1630 Chicago Avenue, Evanston, IL\"\r\n            />\r\n            <Form.Button title={'Request'} />\r\n            {<Form.ErrorMessage error={submitError} visible={true} />}\r\n        </Form>\r\n        {/* <TouchableOpacity onPress={handleOnPress} style={styles.RequestHelpBtn}>\r\n          <Text>{textInside[requested]}</Text>\r\n        </TouchableOpacity> */}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n    \r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  RequestHelpBtn: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingTop: 20,\r\n  },\r\n});\r\n\r\n\r\nexport default RequestHelpBtn;\r\n","import React from 'react';\r\nimport { Button, Text, View, StyleSheet } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nfunction HomeScreen( { navigation }) {\r\n  return (\r\n    <View style={styles.HomeScreen}>\r\n      <Text>Welcome to ShovelSnow!</Text>\r\n      <Button title=\"go to request page\" onPress={ () => navigation.navigate('Request') } />\r\n      <Button title=\"go to volunteer page\" onPress={ () => navigation.navigate('Volunteer') } />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  HomeScreen: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingTop: 20,\r\n  },\r\n});\r\n\r\n\r\nexport default HomeScreen;","import React, {useState, useEffect} from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport MapView, { Marker } from 'react-native-maps';\r\nimport {firebase} from '../firebase'\r\n\r\n\r\n\r\nfunction VolunteerScreen() {\r\n    const [requestList, setRequestList] = useState({ 'requests' : []});\r\n\r\n    const fixRequests = (json) => {\r\n      return {\r\n        ...json,\r\n        requests: Object.values(json['requests'])\r\n      };\r\n    };\r\n\r\n    useEffect(() => {\r\n      const db = firebase.database().ref();\r\n      db.on('value', snap => {\r\n        if (snap.val()) {\r\n          setRequestList(fixRequests(snap.val()));\r\n          console.log('requestList :>> ', requestList['requests']);\r\n        }\r\n      }, error => console.log(error));\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <MapView\r\n          style={{flex:1}}\r\n          initialRegion={{\r\n          latitude: 42.045597,\r\n          longitude: -87.688568,\r\n          latitudeDelta: 0.0922,\r\n          longitudeDelta: 0.0421,\r\n          }} \r\n        >\r\n          {\r\n            requestList['requests'].map((marker, index) => {\r\n              return (\r\n                <Marker \r\n                  key={index}\r\n                  coordinate={{\"latitude\": marker.latitude, \"longitude\": marker.longitude}}\r\n                  title={marker.user} \r\n                  description={marker.time}\r\n                />\r\n              );\r\n            })\r\n          }\r\n        </MapView>\r\n    );\r\n}\r\nconst styles = StyleSheet.create({\r\n    VolunteerScreen: {\r\n      flex: 1,\r\n\r\n    },\r\n  });\r\n  \r\n\r\nexport default VolunteerScreen;","import { setStatusBarNetworkActivityIndicatorVisible } from 'expo-status-bar';\r\nimport React, {useState} from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet, SafeAreaView, ScrollView, Alert } from 'react-native';\r\nimport Form from './Form'\r\n\r\n\r\nexport default function DetailedRequestScreen (marker) {\r\n    <SafeAreaView style={styles.container}>\r\n    <ScrollView>\r\n      <Form\r\n        initialValues={{\r\n          user: '',\r\n          addr: '',\r\n          time: '',\r\n        }}\r\n      >\r\n          <Form.Field\r\n              name=\"user\"\r\n              leftIcon=\"identifier\"\r\n              placeholder={marker.user}\r\n              autoCapitalize=\"none\"\r\n              autoFocus={true}\r\n          />\r\n          <Form.Field\r\n              name=\"time\"\r\n              leftIcon=\"calendar-range\"\r\n              placeholder={marker.time}\r\n              autoCapitalize=\"none\"\r\n          />\r\n          <Form.Field\r\n              name=\"addr\"\r\n              leftIcon={marker.addr}\r\n              placeholder=\"1630 Chicago Avenue, Evanston, IL\"\r\n          />\r\n          <Form.Button title={'Request'} />\r\n          {<Form.ErrorMessage error={submitError} visible={true} />}\r\n      </Form>\r\n      {/* <TouchableOpacity onPress={handleOnPress} style={styles.RequestHelpBtn}>\r\n        <Text>{textInside[requested]}</Text>\r\n      </TouchableOpacity> */}\r\n    </ScrollView>\r\n  </SafeAreaView>\r\n}","import 'react-native-gesture-handler';\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport RequestHelpBtn from './components/RequestScreen';\r\nimport HomeScreen from './components/HomeScreen';\r\nimport VolunteerScreen from './components/VolunteerScreen'\r\nimport DetailedRequestScreen from './components/DetailedRequestScreen'\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function App() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator>\r\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\r\n        <Stack.Screen name=\"Request\" component={RequestHelpBtn} />\r\n        <Stack.Screen name=\"Volunteer\" component={VolunteerScreen} />\r\n        <Stack.Screen name=\"RequestScreen\" component={DetailedRequestScreen} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n/*\r\n      <View style={styles.container}>\r\n        <RequestHelpBtn />\r\n      </View>\r\n*/\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"],"sourceRoot":""}